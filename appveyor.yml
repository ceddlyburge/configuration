image: Visual Studio 2017
environment:
 github_token:
  secure: MkekX4fNuL+MhfZYwE9xv40NFVl2PrRzIapgQVXoHnZb3aVWrgPKnoJ/PneRrLcL 
 code_cov_token:
    secure: dWsIQqaWCFO4u3mUj2VvnEWu9ZOQwSFZ2QrGg1Y5R9ykGQZRodrvpNutWLnWtMxG  
build_script:
 # install sonarqube runner
 - choco install "msbuild-sonarqube-runner" -y 
 - choco install opencover -y
 - nuget restore "RES.Configuration.sln" -verbosity quiet
 #- ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER) { SonarQube.Scanner.MSBuild.exe begin /k:"res.economic-model"  /d:"sonar.host.url=https://sonarcloud.io" /d:"sonar.organization=res" /d:"sonar.login=a8e51e7eccb2eaa68c5f8d3c50e827ee2a0fa545" /d:"sonar.analysis.mode=preview" /d:"sonar.github.pullRequest=$env:APPVEYOR_PULL_REQUEST_NUMBER" /d:"sonar.github.repository=resgroup/economic-model" /d:"sonar.github.oauth=$env:github_token" /d:"sonar.exclusions=**/*Generated*,**/*Generated*/**,**/Base/*Key.cs,**/Base/*FactoryInstance.cs,**/*DataAccessFactory.cs,**/obj/**,**/*Specification*/**/*,**/*.sql,**/*.js,**/*.xml,**/*.ini,**/SpecificationSpecific*, EconomicAssessment/TEST_*,CCD/Scenario*,Property/TEST_*,/*Key.cs,/*Result.cs,tbl*.cs,*Data.cs" }
 #- ps: if (-Not $env:APPVEYOR_PULL_REQUEST_NUMBER) { SonarQube.Scanner.MSBuild.exe begin /k:"res.economic-model"  /d:"sonar.host.url=https://sonarcloud.io" /d:"sonar.organization=res" /d:"sonar.login=a8e51e7eccb2eaa68c5f8d3c50e827ee2a0fa545" /d:"sonar.exclusions=**/*Generated*,**/*Generated*/**,**/Base/*Key.cs,**/Base/*FactoryInstance.cs,**/*DataAccessFactory.cs,**/obj/**,**/*Specification*/**/*,**/*.sql,**/*.js,**/*.xml,**/*.ini,**/SpecificationSpecific*, EconomicAssessment/TEST_*,CCD/Scenario*,Property/TEST_*,/*Key.cs,/*Result.cs"}
 - SonarQube.Scanner.MSBuild.exe begin /k:"res.configuration"  /d:"sonar.host.url=https://sonarcloud.io" /d:"sonar.organization=res" /d:"sonar.login=a8e51e7eccb2eaa68c5f8d3c50e827ee2a0fa545"
 - msbuild RES.Configuration\RES.Configuration.csproj /t:pack /p:IncludeSymbols=true /nowarn:1125
 - SonarQube.Scanner.MSBuild.exe end /d:"sonar.login=a8e51e7eccb2eaa68c5f8d3c50e827ee2a0fa545"

test_script:
 # test and create coverage report. OpenCover comes in via nuget restore
 - OpenCover.Console.exe -register:user -target:"nunit3-console.exe" -targetargs:"RES.Configuration.Test\obj\Debug\RES.Configuration.Test.dll" -output:"coverage.xml" -returntargetcode
 # upload the code coverage to codcov.io
 - "SET PATH=C:\\Python34;C:\\Python34\\Scripts;%PATH%"
 - pip install codecov
 - codecov -f "coverage.xml" -t %code_cov_token%
artifacts:
 - path: BuiltDLLs\Debug\*.nupkg 
notifications:
  - provider: Email
    to:
      - cedd.burge@res-group.com
      - '{{commitAuthorEmail}}'
    subject: 'Build {{status}}'
    on_build_success: false
    on_build_failure: true
    on_build_status_changed: false
