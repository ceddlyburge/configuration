image: Visual Studio 2017
environment:
 github_token:
  secure: mNjJVxRBAmSq7216RlrUBH8dk9a7vMSOIYcHu2Gy4hDJd3j7kFoLpZf48mgNAF5B
 sonarqube_token: 
  secure: 0MsXuoTI0KBmRhi4DCr2WisIi5HS78kw4l3OP4ro1iBj9AYlGrQRtsLwuU7hMzPP
build_script:
 # install sonarqube runner
 - choco install "msbuild-sonarqube-runner" -y 
 - choco install opencover -y
 - nuget restore "RES.Configuration.sln" -verbosity quiet
 - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER) { SonarQube.Scanner.MSBuild.exe begin /k:"ceddlyburge_configuration"  /d:"sonar.host.url=https://sonarcloud.io" /d:"sonar.organization=ceddlyburge-github" /d:sonar.login=$env:sonarqube_token /d:sonar.verbose=false /d:"sonar.analysis.mode=preview" /d:"sonar.github.pullRequest=$env:APPVEYOR_PULL_REQUEST_NUMBER" /d:"sonar.github.repository=resgroup/configuration" /d:"sonar.github.oauth=$env:github_token" /d:sonar.cs.opencover.it.reportsPaths=coverage.xml }
 - ps: if (-Not $env:APPVEYOR_PULL_REQUEST_NUMBER) { SonarQube.Scanner.MSBuild.exe begin /k:"ceddlyburge_configuration"  /d:"sonar.host.url=https://sonarcloud.io" /d:"sonar.organization=ceddlyburge-github" /d:sonar.login=$env:sonarqube_token /d:sonar.verbose=false /d:sonar.cs.opencover.it.reportsPaths=coverage.xml }
 #- SonarQube.Scanner.MSBuild.exe begin /k:"res.configuration"  /d:"sonar.host.url=https://sonarcloud.io" /d:"sonar.organization=res" /d:"sonar.login=f3517fea245e7c8ae57b46ff2ad9895dd4906a35" /d:sonar.verbose=false
 - msbuild RES.Configuration.sln /nowarn:1125 /verbosity:quiet # I think SonarQube only analyses the last msbuild output if there are multiple
 # test and create coverage report, this is used by SonarQube so must do it here
 - OpenCover.Console.exe -register:user -target:"nunit3-console.exe" -targetargs:"BuiltDlls\Debug\RES.Configuration.Test.dll" -output:"coverage.xml" -returntargetcode
 - SonarQube.Scanner.MSBuild.exe end /d:"sonar.login=$env:sonarqube_token"
 - msbuild RES.Configuration\RES.Configuration.csproj /t:pack /p:IncludeSymbols=true /nowarn:1125 /verbosity:quiet

test_script:
# upload the code coverage to codcov.io
  - ps: |
      $env:PATH = 'C:\msys64\usr\bin;' + $env:PATH
      Invoke-WebRequest -Uri 'https://codecov.io/bash' -OutFile codecov.sh
      bash codecov.sh -f "coverage.xml"
# code cov token not required for public repos     -t %code_cov_token%
artifacts:
 - path: BuiltDLLs\Debug\*.nupkg 
notifications:
  - provider: Email
    to:
      - cedd.burge@res-group.com
      - '{{commitAuthorEmail}}'
    subject: 'Build {{status}}'
    on_build_success: false
    on_build_failure: true
    on_build_status_changed: false
